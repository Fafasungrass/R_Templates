# Geometrical objects, or geoms, are the visual elements used to represent data in a plot.
    # To change the geom in your plot, change the geom function that you add to 'ggplot()'
    
# Every geom function in ggplot2 takes a mapping argument.
    # However, not every aesthetic works with every geom.
    # You could set the shape of a point, but you couldn’t set the “shape” of a line. 
    # On the other hand, you could set the linetype of a line. 
    # 'geom_smooth()' will draw a different line, with a different linetype, for each unique value of the variable that you map to linetype:
    
ggplot(data = mpg) + 
  geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
  
    # Here, geom_smooth() separates the cars into three lines based on their drv value, which describes a car’s drivetrain. 
    # One line describes all of the points with a 4 value, one line describes all of the points with an f value, and one line describes all of the points with an r value. 
    # Here, 4 stands for four-wheel drive, f for front-wheel drive, and r for rear-wheel drive.
    
# Multiple geoms in one plot: In ggplot2, you can layer different geoms (geometrical objects) in the same plot.
    # This is useful when you want to visualize different aspects of your data simultaneously. 
    # For example, you might have a scatterplot of data points (using geom_point()) and also want to add a smoothed line to show the trend in the data (using geom_smooth()). 
    # This would look like:
    
    ggplot(data = mpg) + 
  geom_point(mapping = aes(x = displ, y = hwy)) +
  geom_smooth(mapping = aes(x = displ, y = hwy))

# Global and local mappings: In ggplot2, you can specify aesthetic mappings either globally (for the entire plot) or locally (for a specific geom).
    # Global mappings are specified in the ggplot() function and apply to all geoms in the plot. For example:
    
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + 
  geom_point() +                                                    # Here, x = displ and y = hwy are applied to both geom_point() and geom_smooth().
  geom_smooth()

# Local mappings are specified in a specific geom function and apply only to that geom. They override or add to the global mappings. For example:

ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) + 
  geom_point(mapping = aes(color = class)) +                # Here, the points' colors are determined by the class variable, but this does not affect geom_smooth().
  geom_smooth()


# Grouping: For certain geoms that display multiple rows of data as a single geometric object (like geom_smooth()), you can use the group aesthetic to draw multiple objects based on a categorical variable. 
# For example:

ggplot(data = mpg) +
  geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))     # This will draw a different line for each unique value of drv.


    # In many cases, ggplot2 will automatically group the data for these geoms when you map an aesthetic to a discrete (categorical) variable. 
    # For instance:

ggplot(data = mpg) +
  geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))    # Here, the linetype aesthetic is mapped to drv, and ggplot2 will draw a different line for each unique value of drv, with a different line type for each.


